#!/bin/echo "source me !"

##############################
# COLORS ON BLACK BACKGROUND #
##############################
COLOR_BLACK="\e[30m"
COLOR_RED="\e[31m"
COLOR_RED_BOLD="\e[1;31m"
COLOR_GREEN="\e[32m"
COLOR_GREEN_BOLD="\e[1;32m"
COLOR_YELLOW="\e[33m"
COLOR_YELLOW_BOLD="\e[1;33m"
COLOR_BLUE="\e[34m"
COLOR_BLUE_BOLD="\e[1;34m"
COLOR_MAGENTA="\e[35m"
COLOR_MAGENTA_BOLD="\e[1;35m"
COLOR_CYAN="\e[36m"
COLOR_CYAN_BOLD="\e[1;36m"
COLOR_WHITE="\e[37m"
COLOR_WHITE_BOLD="\e[1;37m"

COLOR_GRAY="\e[90m"
COLOR_RED_BRIGHT="\e[91m"
COLOR_GREEN_BRIGHT="\e[92m"
COLOR_YELLOW_BRIGHT="\e[93m"
COLOR_BLUE_BRIGHT="\e[94m"
COLOR_MAGENTA_BRIGHT="\e[95m"
COLOR_WHITE_BRIGHT="\e[96m"
COLOR_WHITE_BRIGHT="\e[97m"

##############################
# COLORS ON WHITE BACKGROUND #
##############################

COLOR_OWB_BLACK="\e[30;47m"

###########################
# COLORS FOR ECHO COMMAND #
###########################

COLOR_DEBUG=${COLOR_CYAN}
COLOR_INFO=${COLOR_YELLOW}
COLOR_WARNING=${COLOR_MAGENTA_BOLD}
COLOR_ERROR=${COLOR_RED_BOLD}
COLOR_DONE=${COLOR_GREEN}

# Print debug formatted
print_debug() {
  datetime=$(date '+%Y-%m-%d %H:%M:%S,%3N')
  echo -e "${COLOR_DEBUG}${datetime} [DEBUG] ${1}\e[0m"
}

# Print info formatted
print_info() {
  datetime=$(date '+%Y-%m-%d %H:%M:%S,%3N')
  echo -e "${COLOR_INFO}${datetime} [INFO] ${1}\e[0m"
}

# Print warning formatted
print_warn() {
  datetime=$(date '+%Y-%m-%d %H:%M:%S,%3N')
  echo -e "${COLOR_WARNING}${datetime} [WARN] ${1}\e[0m"
}

# Print error formatted
print_error() {
  datetime=$(date '+%Y-%m-%d %H:%M:%S,%3N')
  echo -e "${COLOR_ERROR}${datetime} [ERROR] ${1}\e[0m"
}

# Print done formatted
print_done() {
  datetime=$(date '+%Y-%m-%d %H:%M:%S,%3N')
  echo -e "${COLOR_DONE}${datetime} [DONE] ${1}\e[0m"
}

# Print messages into box
function print_box() {
  local longest=0
  local string_array=("${@}")
  for i in "${string_array[@]}"; do
    if [[ "${#i}" -gt "${longest}" ]]; then
      local longest=${#i}
      local longest_line="${i}" # Longest line
    fi
  done

  local edge=$(echo "$longest_line" | sed 's/./#/g' | sed 's/^#/###/' | sed 's/#$/###/')
  local middle_edge=$(echo "$longest_line" | sed 's/./\ /g' | sed 's/^\ /#\  /' | sed 's/\ $/\ \ #/')

  echo -e "\n${edge}"
  echo "${middle_edge}"

  for i in "${string_array[@]}"; do
    local length_i=${#i}
    local length_ll="${#longest_line}"
    if [[ "${length_i}" -lt "${length_ll}"  ]]; then
            printf "# "
            local remaining_spaces=$((length_ll-length_l))
            printf "${i}"
            while [[ ${remaining_spaces} -gt ${#i} ]]; do
                    printf " "
                    local remaining_spaces=$((remaining_spaces-1))
            done
            printf " #\n"
    else
      echo "# ${i} #"
    fi
  done

  echo "${middle_edge}"
  echo -e "${edge}\n"
}
